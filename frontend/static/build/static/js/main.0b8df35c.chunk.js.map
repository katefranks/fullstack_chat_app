{"version":3,"sources":["Registration.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["Registration","props","state","username","email","password1","password2","handleRegistration","bind","handleInput","e","this","setState","target","name","value","a","preventDefault","user","options","method","headers","Cookies","get","body","JSON","stringify","handleError","err","console","warn","fetch","catch","response","json","data","log","key","set","onSubmit","placeholder","type","onChange","React","Component","Login","password","handleLogin","App","instantMessages","instantMessage","addInstantMessage","then","created_at","message_text","push","map","className","id","instantmessages","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b8df35c.chunk.js","sourcesContent":["import React from 'react';\nimport Cookies from 'js-cookie';\n\nclass Registration extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n    }\n\n    this.handleRegistration = this.handleRegistration.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n\n  }\n  handleInput(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  async handleRegistration(e){\n    e.preventDefault();\n\n    const user = {\n      username: this.state.username,\n      email: this.state.email,\n      password1: this.state.password1,\n      password2: this.state.password2,\n    }\n\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n      },\n      body: JSON.stringify(user),\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n    const data = await response.json().catch(handleError);\n\nconsole.log(user);\n  if(data.key){\n    Cookies.set('Authorization', `Token ${data.key}`);\n  }\n  }\n\nrender(){\n return (\n   <form onSubmit={this.handleRegistration}>\n    <input placeholder=\"username\" name=\"username\" type=\"text\" value={this.state.username} onChange={this.handleInput}/>\n    <input placeholder=\"email\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n    <input placeholder=\"password\" type=\"password\" name=\"password1\" value={this.state.password1} onChange={this.handleInput}/>\n    <input placeholder=\"repeat password\" type=\"password\" name=\"password2\" value={this.state.password2} onChange={this.handleInput}/>\n    <button type=\"submit\">Submit</button>\n   </form>\n );\n\n}\n\n}\n\nexport default Registration;\n","import React from 'react';\nimport Cookies from 'js-cookie';\n\nclass Login extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n    }\n\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n\n  }\n  handleInput(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  async handleLogin(e){\n    e.preventDefault();\n\n    const user = {\n      username: this.state.username,\n      email: this.state.email,\n      password: this.state.password,\n    }\n\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n      },\n      body: JSON.stringify(user),\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/login/', options).catch(handleError);\n    const data = await response.json().catch(handleError);\n\nconsole.log(user);\n  if(data.key){\n    Cookies.set('Authorization', `Token ${data.key}`);\n  }\n  }\n\nrender(){\n return (\n   <form onSubmit={this.handleLogin}>\n    <input placeholder=\"username\" name=\"username\" type=\"text\" value={this.state.username} onChange={this.handleInput}/>\n    <input placeholder=\"email\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n    <input placeholder=\"password\" type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInput}/>\n    <button type=\"submit\">Submit</button>\n   </form>\n );\n\n}\n\n}\n\nexport default Login;\n","import React from 'react';\nimport Cookies from 'js-cookie';\nimport Registration from './Registration';\nimport Login from './Login';\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      instantMessages: [],\n      instantMessage: [],\n\n    }\n    this.addInstantMessage = this.addInstantMessage.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    // this.addToChatWindow = this.addToChatWindow.bind(this);\n}\ncomponentDidMount(){\n    fetch('/api/v1/instantMessages/')\n      .then(response => response.json())\n      .then(data => this.setState({ instantMessages: data }));\n  }\n  handleInput(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  addInstantMessage(e){\n    // console.log(this.state.value);\n\n    e.preventDefault();\n\n    const instantMessage = {\n      created_at: this.state.created_at,\n      username: this.state.username,\n      message_text: this.state.message_text,\n    };\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(instantMessage),\n    }\n\n\n    fetch('/api/v1/instantMessages/', options)\n      .then(response => response.json())\n      .then(data => console.log(data))\n      // .then(data => this.setState({ instantMessages: data }));\n      .then(response => {\n            //logic to update state\n            const instantMessages = [...this.state.instantMessages];\n            instantMessages.push(instantMessage)\n            this.setState({ instantMessages });\n          });\n\n  }\n\n  render(){\n    const instantMessages = this.state.instantMessages.map(instantMessage => (\n      <li className=\"instant-messages\" key={instantMessage.id}>\n      <p>Sent at: {instantMessage.created_at}</p>\n      <p className=\"user_image\">{instantMessage.username}</p>\n      <p className=\"instant-message-text-display\">{instantMessage.message_text}</p>\n      </li>\n    ))\n    return(\n\n      <>\n      <Registration />\n      <Login />\n      <div className=\"chat-app-container\">\n      <header className=\"chat-app-header\">\n        <p id=\"header-text\">Instant Messenger</p>\n      </header>\n      <ul instantmessages={this.state.instantMessages} className=\"instant-message-window\">{instantMessages}</ul>\n      <form className=\"input-form\" onSubmit={this.addInstantMessage}>\n        <input className=\"input-box\" type=\"text\" name=\"message_text\" value={this.state.message_text} onChange={this.handleInput} placeholder=\"Enter Text\"/>\n        <button className=\"form-button\" type=\"submit\" value=\"Submit\">SEND</button>\n      </form>\n      </div>\n      </>\n    )\n  }\n}\nexport default App;\n\n// removing user_name to try to resolve 500 error. Code below works.\n\n// import React from 'react';\n// import Cookies from 'js-cookie';\n// import Registration from './Registration';\n// import Login from './Login';\n// import './App.css';\n//\n//\n// class App extends React.Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       instantMessages: [],\n//       instantMessage: [],\n//\n//     }\n//     this.addInstantMessage = this.addInstantMessage.bind(this);\n//     this.handleInput = this.handleInput.bind(this);\n//     // this.addToChatWindow = this.addToChatWindow.bind(this);\n// }\n// componentDidMount(){\n//     fetch('/api/v1/instantMessages/')\n//       .then(response => response.json())\n//       .then(data => this.setState({ instantMessages: data }));\n//   }\n//   handleInput(e) {\n//     this.setState({[e.target.name]: e.target.value});\n//   }\n//\n//   addInstantMessage(e){\n//     // console.log(this.state.value);\n//\n//     e.preventDefault();\n//\n//     const instantMessage = {\n//       created_at: this.state.created_at,\n//       user_name: this.state.user_name,\n//       message_text: this.state.message_text,\n//     };\n//\n//     const options = {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         'X-CSRFToken': Cookies.get('csrftoken'),\n//       },\n//       body: JSON.stringify(instantMessage),\n//     }\n//\n//\n//     fetch('/api/v1/instantMessages/', options)\n//       .then(response => response.json())\n//       .then(data => console.log(data))\n//       // .then(data => this.setState({ instantMessages: data }));\n//       .then(response => {\n//             //logic to update state\n//             const instantMessages = [...this.state.instantMessages];\n//             instantMessages.push(instantMessage)\n//             this.setState({ instantMessages });\n//           });\n//\n//   }\n//\n//   render(){\n//     const instantMessages = this.state.instantMessages.map(instantMessage => (\n//       <li className=\"instant-messages\" key={instantMessage.id}>\n//       <p>Sent at: {instantMessage.created_at}</p>\n//       <p className=\"user_image\">{instantMessage.user_name}</p>\n//       <p className=\"instant-message-text-display\">{instantMessage.message_text}</p>\n//       </li>\n//     ))\n//     return(\n//\n//       <>\n//       <Registration />\n//       <Login />\n//       <div className=\"chat-app-container\">\n//       <header className=\"chat-app-header\">\n//         <p id=\"header-text\">Instant Messenger</p>\n//       </header>\n//       <ul instantmessages={this.state.instantMessages} className=\"instant-message-window\">{instantMessages}</ul>\n//       <form className=\"input-form\" onSubmit={this.addInstantMessage}>\n//         <input className=\"input-box\" type=\"text\" name=\"user_name\" value={this.state.user_name} onChange={this.handleInput} placeholder=\"Enter Name\"/>\n//         <input className=\"input-box\" type=\"text\" name=\"message_text\" value={this.state.message_text} onChange={this.handleInput} placeholder=\"Enter Text\"/>\n//         <button className=\"form-button\" type=\"submit\" value=\"Submit\">SEND</button>\n//       </form>\n//       </div>\n//       </>\n//     )\n//   }\n// }\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}