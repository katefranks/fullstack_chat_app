{"version":3,"sources":["components/Registration.js","components/Login.js","components/MessageForm.js","components/MessageDetail.js","components/MessageList.js","components/App.js","reportWebVitals.js","index.js"],"names":["Registration","props","state","username","email","password1","password2","handleSubmit","bind","handleInput","e","this","setState","target","name","value","preventDefault","handleRegistration","className","onSubmit","htmlFor","placeholder","type","onChange","onClick","handleNavigation","React","Component","Login","password","handleLogin","MessageForm","message_text","addInstantMessage","handleLogout","MessageDetail","isEditing","instantMessage","saveMessage","editMessage","format","created_at","has_owner_permissions","deleteMessage","id","aria-hidden","class","MessageList","instantMessages","fetchData","retrieveMessages","setInterval","clearInterval","message","options","method","headers","Cookies","get","body","JSON","stringify","fetch","then","response","json","data","console","log","push","index","findIndex","splice","catch","error","map","instantmessages","App","selection","user","a","handleError","err","warn","ok","set","key","alert","remove","html","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0550921.chunk.js","sourcesContent":["import React from 'react';\n\nclass Registration extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n\n  }\n  handleInput(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  handleSubmit(e){\n     e.preventDefault();\n     this.props.handleRegistration(this.state);\n  }\n\n\n\nrender(){\n return (\n   <>\n   <form className=\"form-login\" onSubmit={this.handleSubmit}>\n   <label className=\"login-label\" htmlFor=\"\">New User? <br/> Register!</label>\n   <br/>\n    <input className=\"login-input\" placeholder=\"username\" name=\"username\" type=\"text\" value={this.state.username} onChange={this.handleInput}/>\n    <br/>\n    <input className=\"login-input\" placeholder=\"email\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n    <br/>\n    <input className=\"login-input\" placeholder=\"password\" type=\"password\" name=\"password1\" value={this.state.password1} onChange={this.handleInput}/>\n    <br/>\n    <input className=\"login-input\" placeholder=\"re-type password\" type=\"password\" name=\"password2\" value={this.state.password2} onChange={this.handleInput}/>\n    <br/>\n    <button className=\"submit-button\" type=\"submit\">Submit</button>\n   </form>\n   <button className=\"toggle-register\" onClick={() => this.props.handleNavigation('login')}>Current User Login</button>\n   </>\n );\n\n}\n\n}\n\nexport default Registration;\n","import React from 'react';\n// import Cookies from 'js-cookie';\n\n// import './Login.css';\n\nclass Login extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n\n  }\n  handleInput(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  handleSubmit(e){\n     e.preventDefault();\n     this.props.handleLogin(this.state);\n  }\n\nrender(){\n return (\n   <>\n   <form onSubmit={this.handleSubmit} className=\"form-login\">\n    <label className=\"login-label\" htmlFor=\"\">Login:</label>\n    <br/>\n    <input className=\"login-input\" placeholder=\"username\" name=\"username\" type=\"text\" value={this.state.username} onChange={this.handleInput}/>\n    <br/>\n    <input className=\"login-input\" placeholder=\"email\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n    <br/>\n    <input className=\"login-input\" placeholder=\"password\" type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInput}/>\n    <br/>\n    <button className=\"submit-button\" type=\"submit\">Submit</button>\n   </form>\n   <button className=\"toggle-register\" onClick={() => this.props.handleNavigation('register')}>Create New Account</button>\n  </>\n );\n\n}\n\n}\n\nexport default Login;\n\n// import React from 'react';\n// import Cookies from 'js-cookie';\n//\n// class Login extends React.Component {\n//\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       username: '',\n//       email: '',\n//       password: '',\n//     }\n//\n//     this.handleLogin = this.handleLogin.bind(this);\n//     this.handleInput = this.handleInput.bind(this);\n//\n//   }\n//   handleInput(e) {\n//     this.setState({[e.target.name]: e.target.value});\n//   }\n//\n//   async handleLogin(e){\n//     e.preventDefault();\n//\n//     const user = {\n//       username: this.state.username,\n//       email: this.state.email,\n//       password: this.state.password,\n//     }\n//\n//\n//     const options = {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         'X-CSRFToken': Cookies.get('csrftoken')\n//       },\n//       body: JSON.stringify(user),\n//     };\n//\n//     const handleError = (err) => console.warn(err);\n//     const response = await fetch('/rest-auth/login/', options).catch(handleError);\n//     const data = await response.json().catch(handleError);\n//\n// console.log(user);\n//   if(data.key){\n//     Cookies.set('Authorization', `Token ${data.key}`);\n//   }\n//   }\n//\n// render(){\n//  return (\n//    <form onSubmit={this.handleLogin}>\n//     <label htmlFor=\"\">Login</label>\n//     <br/>\n//     <input className=\"login-input\" placeholder=\"username\" name=\"username\" type=\"text\" value={this.state.username} onChange={this.handleInput}/>\n//     <br/>\n//     <input className=\"login-input\" placeholder=\"email\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n//     <br/>\n//     <input className=\"login-input\" placeholder=\"password\" type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInput}/>\n//     <br/>\n//     <button type=\"submit\">Submit</button>\n//    </form>\n//\n//  );\n//\n// }\n//\n// }\n//\n// export default Login;\n","import React from 'react';\n\n\nclass MessageForm extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      message_text: '',\n\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n}\n\nhandleInput(e) {\n  this.setState({[e.target.name]: e.target.value});\n}\n\nhandleSubmit(e) {\n  e.preventDefault();\n  this.props.addInstantMessage(this.state);\n  this.setState({message_text: ''});\n  // set state is a function that takes a function or an object.\n}\n\n\nrender(){\n  return(\n    <div className=\"message-form-details\">\n      <form className=\"input-form\" onSubmit={this.handleSubmit}>\n        <button className=\"form-button\" onClick={this.props.handleLogout}>Logout</button>\n        <input className=\"input-box\" type=\"text\" name=\"message_text\" value={this.state.message_text} onChange={this.handleInput} placeholder=\"Enter Text\"/>\n        <button className=\"form-button\" type=\"submit\" value=\"Submit\">SEND</button>\n      </form>\n    </div>\n  )\n}\n}\n\nexport default MessageForm;\n","import React from 'react';\nimport Moment from 'react-moment';\nimport 'font-awesome/css/font-awesome.min.css';\n\nclass MessageDetail extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      isEditing : false,\n      message_text: this.props.instantMessage.message_text,\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.saveMessage = this.saveMessage.bind(this);\n  }\n\n  handleInput(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  saveMessage() {\n\n    const instantMessage = this.props.instantMessage;\n    instantMessage.message_text = this.state.message_text;\n    this.props.editMessage(instantMessage);\n    this.setState({isEditing: false});\n  }\n\n  render(){\n    const instantMessage = this.props.instantMessage;\n\n    return(\n      <li className=\"instant-messages\">\n        <Moment format=\"MM/DD/YYYY  hh:mm:ss\">{instantMessage.created_at}</Moment>\n        <p className=\"user_image\">{instantMessage.username}</p>\n        {\n          this.state.isEditing\n          ? <input className=\"input-box\" type=\"text\" name=\"message_text\" value={this.state.message_text} onChange={this.handleInput} />\n          : <p className=\"instant-message-text-display\">{instantMessage.message_text}</p>\n        }\n        <div className=\"button-container\">\n        {\n        instantMessage.has_owner_permissions && <button className=\"message-detail-buttons\" type='button' onClick={() => this.props.deleteMessage(instantMessage.id)}><i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i></button>\n        }\n        {\n          this.state.isEditing\n          ? <button className=\"message-detail-buttons\" type='button' onClick={this.saveMessage}><i class=\"fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\n          : instantMessage.has_owner_permissions &&\n          <button className=\"message-detail-buttons\" type='button' onClick={() => this.setState({isEditing : true})}><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></button>\n        }\n        </div>\n      </li>\n    )\n  }\n}\nexport default MessageDetail;\n","import React from 'react';\nimport MessageForm from './MessageForm'\nimport MessageDetail from './MessageDetail'\nimport Cookies from 'js-cookie';\n\nclass MessageList extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      instantMessages: [],\n    };\n\n    this.handleInput = this.handleInput.bind(this);\n    this.addInstantMessage = this.addInstantMessage.bind(this);\n    this.deleteMessage = this.deleteMessage.bind(this);\n    this.editMessage = this.editMessage.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n}\n\nhandleInput(e) {\n  this.setState({[e.target.name]: e.target.value});\n}\n\ncomponentDidMount(){\n  this.retrieveMessages = setInterval(this.fetchData, 1000)\n}\n\ncomponentWillUnmount(){\n  clearInterval(this.retrieveMessages)\n}\n\naddInstantMessage(message){\n\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n    },\n    body: JSON.stringify(message),\n  }\n\n\n  fetch('/api/v1/instantMessages/', options)\n    .then(response => response.json())\n    .then(data => {\n      console.log(data);\n      const instantMessages = [...this.state.instantMessages];\n      instantMessages.push(data);\n      this.setState({instantMessages});\n    });\n}\n\ndeleteMessage(id){\n  const options = {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken')\n    }\n  }\n  fetch(`/api/v1/instantMessages/${id}`, options)\n    .then(response => {\n      const instantMessages = [...this.state.instantMessages];\n      const index = instantMessages.findIndex(instantMessage => instantMessage.id === id);\n      instantMessages.splice(index, 1);\n      this.setState({ instantMessages });\n    })\n  .catch((error) => {\n    console.error('Error: ', error);\n  });\n}\n\n\neditMessage(instantMessage){\n\n  const options = {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n    },\n    body: JSON.stringify(instantMessage),\n    //the content being sent to the backend.\n  }\n\n\n  fetch(`/api/v1/instantMessages/${instantMessage.id}/`, options)\n    .then(response => response.json())\n    // takes the response from the fetch request and turns it into json\n    .then(data => {\n      const instantMessages = [...this.state.instantMessages];\n      // makes a shallow copy of instantMessages\n      const index = instantMessages.findIndex(message_text => message_text.id === instantMessage.id );\n      // finds the index of the messag_text and makes sure the instantmessage id is equal to the original instantMessage id to replace it\n      instantMessage[index] = data;\n      // changes the value of the message to the value of the data that was PUT up\n      this.setState({ instantMessages });\n      // sets state to the new list of messages\n    });\n}\n\n\nfetchData(){\n    fetch('/api/v1/instantMessages/')\n      .then(response => response.json())\n      .then(data => this.setState({ instantMessages: data }));\n  }\n\n  render(){\n    const instantMessages = this.state.instantMessages.map(instantMessage => (\n      <MessageDetail key={instantMessage.id} instantMessage={instantMessage} deleteMessage={this.deleteMessage} editMessage={this.editMessage}/>\n    ));\n    return(\n      <>\n        <ul instantmessages={this.state.instantMessages} className=\"instant-message-window\">\n          {instantMessages}\n        </ul>\n        <MessageForm addInstantMessage={this.addInstantMessage} handleLogout={this.props.handleLogout}/>\n      </>\n    )\n  }\n}\nexport default MessageList;\n","import React from 'react';\nimport Cookies from 'js-cookie';\nimport Registration from './Registration';\nimport Login from './Login';\nimport MessageList from './MessageList';\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      selection: !! Cookies.get('Authorization') ? 'messages' : 'login'\n    };\n  this.handleLogin = this.handleLogin.bind(this);\n  this.handleLogout = this.handleLogout.bind(this);\n  this.handleNavigation = this.handleNavigation.bind(this);\n  this.handleRegistration = this.handleRegistration.bind(this);\n}\n\nhandleNavigation(selection){\n  this.setState({ selection });\n}\n\nasync handleLogin(user){\n\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken')\n    },\n    body: JSON.stringify(user),\n  };\n\n  const handleError = (err) => console.warn(err);\n  const response = await fetch('/rest-auth/login/', options).catch(handleError);\n\nif(response.ok){\n  const data = await response.json().catch(handleError);\n  Cookies.set('Authorization', `Token ${data.key}`);\n  this.setState({ selection : 'messages' });\n} else {\n  alert('Incorrect Username or Password, Please Try Again!')\n}\n}\n\nasync handleRegistration(user){\n\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken')\n    },\n    body: JSON.stringify(user),\n  };\n\n  const handleError = (err) => console.warn(err);\n  const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n\n  if(response.ok){\n  const data = await response.json().catch(handleError);\n\n  Cookies.set('Authorization', `Token ${data.key}`);\n  this.setState({ selection : 'messages' });\n} else {\n  //throw error\n}\n}\n\n\nasync handleLogout(){\n\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n    },\n  };\n\n  const handleError = (err) => console.warn(err);\n  const response = await fetch('/rest-auth/logout/', options).catch(handleError);\n\nif(response.ok){\n  Cookies.remove('Authorization');\n  this.setState({ selection: 'login' });\n  }\n\n}\n\n\n  render(){\n    let html;\n\n    if(this.state.selection === 'register') {\n      html = <Registration handleRegistration={this.handleRegistration} handleNavigation={this.handleNavigation}/>;\n    } else if (this.state.selection === 'login') {\n      html = <Login handleLogin={this.handleLogin} handleNavigation={this.handleNavigation}/>;\n    } else {\n      html = <MessageList handleLogout={this.handleLogout} />\n    }\n\n    return(\n      <>\n        <div className=\"chat-app-container\">\n          <header className=\"chat-app-header\">\n            <p id=\"header-text\">¿Qué tal?</p>\n          </header>\n          {html}\n        </div>\n      </>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}