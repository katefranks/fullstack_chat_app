{"version":3,"sources":["Registration.js","Login.js","MessageForm.js","MessageList.js","App.js","reportWebVitals.js","index.js"],"names":["Registration","props","state","username","email","password1","password2","handleSubmit","bind","handleInput","e","this","setState","target","name","value","preventDefault","handleRegistration","onSubmit","htmlFor","className","placeholder","type","onChange","React","Component","Login","password","handleLogin","MessageForm","message_text","addInstantMessage","MessageList","instantMessages","message","options","method","headers","Cookies","get","body","JSON","stringify","fetch","then","response","json","data","console","log","push","map","instantMessage","created_at","id","instantmessages","App","selection","user","a","handleError","err","warn","catch","ok","set","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b23214ba.chunk.js","sourcesContent":["import React from 'react';\nimport Cookies from 'js-cookie';\n\nclass Registration extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n\n  }\n  handleInput(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  handleSubmit(e){\n     e.preventDefault();\n     this.props.handleRegistration(this.state);\n  }\n\n\n\nrender(){\n return (\n   <form onSubmit={this.handleSubmit}>\n   <label htmlFor=\"\">Registration</label>\n   <br/>\n    <input className=\"registration-input\" placeholder=\"username\" name=\"username\" type=\"text\" value={this.state.username} onChange={this.handleInput}/>\n    <br/>\n    <input className=\"registration-input\" placeholder=\"email\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n    <br/>\n    <input className=\"registration-input\" placeholder=\"password\" type=\"password\" name=\"password1\" value={this.state.password1} onChange={this.handleInput}/>\n    <br/>\n    <input className=\"registration-input\" placeholder=\"repeat password\" type=\"password\" name=\"password2\" value={this.state.password2} onChange={this.handleInput}/>\n    <br/>\n    <button type=\"submit\">Submit</button>\n   </form>\n );\n\n}\n\n}\n\nexport default Registration;\n","import React from 'react';\nimport Cookies from 'js-cookie';\n\nclass Login extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n\n  }\n  handleInput(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  handleSubmit(e){\n     e.preventDefault();\n     this.props.handleLogin(this.state);\n  }\n\nrender(){\n return (\n   <form onSubmit={this.handleSubmit}>\n    <label htmlFor=\"\">Login</label>\n    <br/>\n    <input className=\"login-input\" placeholder=\"username\" name=\"username\" type=\"text\" value={this.state.username} onChange={this.handleInput}/>\n    <br/>\n    <input className=\"login-input\" placeholder=\"email\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n    <br/>\n    <input className=\"login-input\" placeholder=\"password\" type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInput}/>\n    <br/>\n    <button type=\"submit\">Submit</button>\n   </form>\n\n );\n\n}\n\n}\n\nexport default Login;\n\n// import React from 'react';\n// import Cookies from 'js-cookie';\n//\n// class Login extends React.Component {\n//\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       username: '',\n//       email: '',\n//       password: '',\n//     }\n//\n//     this.handleLogin = this.handleLogin.bind(this);\n//     this.handleInput = this.handleInput.bind(this);\n//\n//   }\n//   handleInput(e) {\n//     this.setState({[e.target.name]: e.target.value});\n//   }\n//\n//   async handleLogin(e){\n//     e.preventDefault();\n//\n//     const user = {\n//       username: this.state.username,\n//       email: this.state.email,\n//       password: this.state.password,\n//     }\n//\n//\n//     const options = {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         'X-CSRFToken': Cookies.get('csrftoken')\n//       },\n//       body: JSON.stringify(user),\n//     };\n//\n//     const handleError = (err) => console.warn(err);\n//     const response = await fetch('/rest-auth/login/', options).catch(handleError);\n//     const data = await response.json().catch(handleError);\n//\n// console.log(user);\n//   if(data.key){\n//     Cookies.set('Authorization', `Token ${data.key}`);\n//   }\n//   }\n//\n// render(){\n//  return (\n//    <form onSubmit={this.handleLogin}>\n//     <label htmlFor=\"\">Login</label>\n//     <br/>\n//     <input className=\"login-input\" placeholder=\"username\" name=\"username\" type=\"text\" value={this.state.username} onChange={this.handleInput}/>\n//     <br/>\n//     <input className=\"login-input\" placeholder=\"email\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n//     <br/>\n//     <input className=\"login-input\" placeholder=\"password\" type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInput}/>\n//     <br/>\n//     <button type=\"submit\">Submit</button>\n//    </form>\n//\n//  );\n//\n// }\n//\n// }\n//\n// export default Login;\n","import React from 'react';\n\nclass MessageForm extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      message_text: '',\n\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    // this.addToChatWindow = this.addToChatWindow.bind(this);\n}\n\nhandleInput(e) {\n  this.setState({[e.target.name]: e.target.value});\n}\n\nhandleSubmit(e) {\n  e.preventDefault();\n  this.props.addInstantMessage(this.state);\n  this.setState({message_text: ''});\n  // set state is a function that takes a function or an object.\n}\n\n\nrender(){\n\n  return(\n    <form className=\"input-form\" onSubmit={this.handleSubmit}>\n      <input className=\"input-box\" type=\"text\" name=\"message_text\" value={this.state.message_text} onChange={this.handleInput} placeholder=\"Enter Text\"/>\n      <button className=\"form-button\" type=\"submit\" value=\"Submit\">SEND</button>\n    </form>\n  )\n}\n}\n\nexport default MessageForm;\n","import React from 'react';\nimport MessageForm from './MessageForm'\nimport Cookies from 'js-cookie';\n\nclass MessageList extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      instantMessages: [],\n    };\n\n    this.addInstantMessage = this.addInstantMessage.bind(this);\n\n}\n\naddInstantMessage(message){\n\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n    },\n    body: JSON.stringify(message),\n  }\n\n\n  fetch('/api/v1/instantMessages/', options)\n    .then(response => response.json())\n    .then(data => {\n      console.log(data);\n      const instantMessages = [...this.state.instantMessages];\n      instantMessages.push(data);\n      this.setState({instantMessages});\n    });\n}\n\ncomponentDidMount(){\n    fetch('/api/v1/instantMessages/')\n      .then(response => response.json())\n      .then(data => this.setState({ instantMessages: data }));\n  }\n  render(){\n    const instantMessages = this.state.instantMessages.map(instantMessage => (\n      <li className=\"instant-messages\" key={instantMessage.id}>\n      <p>Sent at: {instantMessage.created_at}</p>\n      <p className=\"user_image\">{instantMessage.username}</p>\n      <p className=\"instant-message-text-display\">{instantMessage.message_text}</p>\n      </li>\n    ))\n    return(\n      <>\n        <ul instantmessages={this.state.instantMessages} className=\"instant-message-window\">\n          {instantMessages}\n        </ul>\n        <MessageForm addInstantMessage={this.addInstantMessage} />\n      </>\n    )\n  }\n}\nexport default MessageList;\n","import React from 'react';\nimport Cookies from 'js-cookie';\nimport Registration from './Registration';\nimport Login from './Login';\nimport MessageList from './MessageList';\nimport MessageForm from './MessageForm';\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      selection: !! Cookies.get('Authorization') ? 'messages' : 'login'\n    };\n  this.handleLogin = this.handleLogin.bind(this);\n  this.handleRegistration = this.handleRegistration.bind(this);\n}\n\nasync handleLogin(user){\n\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken')\n    },\n    body: JSON.stringify(user),\n  };\n\n  const handleError = (err) => console.warn(err);\n  const response = await fetch('/rest-auth/login/', options).catch(handleError);\n\nif(response.ok){\n  const data = await response.json().catch(handleError);\n\n  Cookies.set('Authorization', `Token ${data.key}`);\n  this.setState({ selection : 'messages' });\n} else {\n  //throw error\n}\n}\n\nasync handleRegistration(user){\n\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken')\n    },\n    body: JSON.stringify(user),\n  };\n\n  const handleError = (err) => console.warn(err);\n  const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n\n  if(response.ok){\n  const data = await response.json().catch(handleError);\n\n  Cookies.set('Authorization', `Token ${data.key}`);\n  this.setState({ selection : 'messages' });\n} else {\n  //throw error\n}\n}\n\n  render(){\n\n    return(\n\n      <>\n      <Registration />\n      <Login />\n      <div className=\"chat-app-container\">\n        <header className=\"chat-app-header\">\n          <p id=\"header-text\">Instant Messenger</p>\n        </header>\n        <MessageList />\n      </div>\n      </>\n    )\n  }\n}\nexport default App;\n\n// handleNavigation- to toggle between login or registration\n\n////////// BREAKING THE BELOW (ALL CODE IN APP JS) INTO MessageList & MessageForm COMPONENTS //////////////\n\n// import React from 'react';\n// import Cookies from 'js-cookie';\n// import Registration from './Registration';\n// import Login from './Login';\n// import './App.css';\n//\n//\n// class App extends React.Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       instantMessages: [],\n//       instantMessage: [],\n//\n//     }\n//     this.addInstantMessage = this.addInstantMessage.bind(this);\n//     this.handleInput = this.handleInput.bind(this);\n//     // this.addToChatWindow = this.addToChatWindow.bind(this);\n// }\n// componentDidMount(){\n//     fetch('/api/v1/instantMessages/')\n//       .then(response => response.json())\n//       .then(data => this.setState({ instantMessages: data }));\n//   }\n//   handleInput(e) {\n//     this.setState({[e.target.name]: e.target.value});\n//   }\n//\n//   addInstantMessage(e){\n//     // console.log(this.state.value);\n//\n//     e.preventDefault();\n//\n//     const instantMessage = {\n//       // created_at: this.state.created_at,\n//       username: this.state.username,\n//       message_text: this.state.message_text,\n//     };\n//\n//     const options = {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         'X-CSRFToken': Cookies.get('csrftoken'),\n//       },\n//       body: JSON.stringify(instantMessage),\n//     }\n//\n//\n//     fetch('/api/v1/instantMessages/', options)\n//       .then(response => response.json())\n//       .then(data => {\n//         console.log(data);\n//         const instantMessages = [...this.state.instantMessages]\n//         instantMessages.push(data)\n//         this.setState({instantMessages})\n//       });\n//   }\n// // set state is a function that takes a function or an object.\n//   render(){\n//     const instantMessages = this.state.instantMessages.map(instantMessage => (\n//       <li className=\"instant-messages\" key={instantMessage.id}>\n//       <p>Sent at: {instantMessage.created_at}</p>\n//       <p className=\"user_image\">{instantMessage.username}</p>\n//       <p className=\"instant-message-text-display\">{instantMessage.message_text}</p>\n//       </li>\n//     ))\n//     return(\n//\n//       <>\n//       <Registration />\n//       <Login />\n//       <div className=\"chat-app-container\">\n//       <header className=\"chat-app-header\">\n//         <p id=\"header-text\">Instant Messenger</p>\n//       </header>\n//       <ul instantmessages={this.state.instantMessages} className=\"instant-message-window\">{instantMessages}</ul>\n//       <form className=\"input-form\" onSubmit={this.addInstantMessage}>\n//         <input className=\"input-box\" type=\"text\" name=\"message_text\" value={this.state.message_text} onChange={this.handleInput} placeholder=\"Enter Text\"/>\n//         <button className=\"form-button\" type=\"submit\" value=\"Submit\">SEND</button>\n//       </form>\n//       </div>\n//       </>\n//     )\n//   }\n// }\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}